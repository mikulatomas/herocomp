
long heap [100000];
long front = &heap;

lalloc (size)
{
    long ptr = front;
    front += size * sizeof (long);
    return ptr;
}

cons (a, b)
{
    long new = lalloc (3);
    new [0] = 1;
    new [1] = a;
    new [2] = b;
    return new;
}

pairp (x)
{
    return x [0] == 1;
}

car (p)
{
    return p [1];
}

cdr (p)
{
    return p [2];
}

num (x)
{
    long new = lalloc (2);
    new [0] = 0;
    new [1] = x;
    return new;
}

value (n)
{
    return n [1];
}

main ()
{
    /* elements with manifested types */
    long a = cons (num (10), cons (num (20), cons (num (30), 0)));
    print_long (value (car (a)));
    print_nl ();
    print_long (value (car (cdr (a))));
    print_nl ();
    print_long (value (car (cdr (cdr (a)))));
    print_nl ();
}
