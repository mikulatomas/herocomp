
print_array (array, size)
{
    long i;
    for (i = 0; i < size; i ++) {
	if (i) {
	    print_char (',');
	    print_char (' ');
	}
	print_long (array [i]);
    }
    print_nl ();
}

swap (array, i, j)
{
    long foo = array [i];
    array [i] = array [j];
    array [j] = foo;
}

partition (array, p, r)
{
    long j, x = array [r], i = p - 1;
    for (j = p; j <= r - 1; j ++) {
	if (array [j] <= x) {
	    i ++;
	    swap (array, i, j);
	}
    }
    swap (array, i + 1, r);
    return i + 1;
}

quick_sort_rec (array, p, r)
{
    if (p < r) {
	long q = partition (array, p, r);
	quick_sort_rec (array, p, q - 1);
	quick_sort_rec (array, q + 1, r);
    }
}

quick_sort (array, n)
{
    quick_sort_rec (array, 0, n - 1);
}

main ()
{
    /* quick sort array */
    long a = {8, 4, 2, 1, 5, 2, 8, 9, 3, 4, 3, 2, 3, 6, 4, 8, 9, 2, 3, 5};
    long b = {4, 3, 4, 2, 3, 3, 1, 2, 4, 0, 3, 4, 1, 2, 4};
    long c = {9, 8, 7, 6, 5, 4, 3, 2, 1, 0};
    quick_sort (a, 20);
    print_array (a, 20);
    quick_sort (b, 15);
    print_array (b, 15);
    quick_sort (c, 10);
    print_array (c, 10);
}
